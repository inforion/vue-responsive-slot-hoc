{
  "root": true,
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:unicorn/recommended",
    "airbnb-base"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "tsconfigRootDir": ".",
    "sourceType": "module"
  },
  "processor": "disable/disable",
  "plugins": [
    "@typescript-eslint",
    "disable",
    "import",
    "simple-import-sort",
    "unicorn"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "overrides": [
    {
      "files": ["webpack.config.js"],
      "env": {
        "node": true
      }
    },
    {
      "files": ["**.js"],
      "settings": {
        "disable/plugins": ["@typescript-eslint"]
      }
    }
  ],
  "rules": {
    "@typescript-eslint/ban-types": ["error", {
      "extendDefaults": true,
      "types": {
        "Function": false
      }
    }],
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/semi": ["error"],
    "import/extensions": ["error", "never"],
    "import/no-extraneous-dependencies": [
      "error", {
        "devDependencies": true
      }
    ],
    "import/order": "off",
    "import/prefer-default-export": "off",
    "unicorn/no-null": "off",
    "simple-import-sort/sort": "error",
    "unicorn/prevent-abbreviations": ["error", {
      "replacements": {
        "prop": false,
        "props": false
      }
    }],
    "comma-dangle": ["error", "never"],
    "eol-last": ["error", "never"],
    "no-param-reassign": ["off"],
    "indent": ["error", 4],
    "max-len": ["error", 120],
    "no-empty-function": "off",
    "no-trailing-spaces": "error",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-useless-constructor": "off",
    // in favor of @typescript-eslint/semi
    "semi": "off",
    "sort-imports": "off",
    "quotes": ["error", "single"]
  }
}